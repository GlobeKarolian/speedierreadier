name: Update Boston News Summaries

on:
  schedule:
    - cron: '0 */2 * * *'  # Every 2 hours
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]
    paths: [ 'generate_summaries.py', 'requirements.txt' ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: news-update
  cancel-in-progress: false

jobs:
  update-news:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate news summaries
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        python generate_summaries.py
      continue-on-error: true
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Boston Speed Read Bot"
        
        # Pull latest changes first
        git pull origin main --rebase || true
        
        # Add files (both might not exist yet)
        git add news-data.json news-history.json || git add news-data.json || true
        
        # Only commit if there are changes
        if ! git diff --staged --quiet; then
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S EST')
          git commit -m "üì∞ Update news summaries - $TIMESTAMP"
          
          # Push with retry logic
          for i in {1..3}; do
            if git push origin main; then
              echo "‚úÖ Successfully pushed changes"
              break
            else
              echo "‚ö†Ô∏è  Push failed, attempt $i/3"
              git pull origin main --rebase
              sleep $((i * 2))
            fi
          done
        else
          echo "‚ÑπÔ∏è  No changes to commit"
        fi

  # Deploy to GitHub Pages
  deploy-pages:
    needs: update-news
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
